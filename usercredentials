package fop.assignment ;
import java.io.*;
import java.util.*;

public class usercredentials {
    public static void main(String[] args) {
        usercredentials app = new usercredentials();
        app.run();
    }

    public void run() {
        Scanner scanner = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            System.out.println("1. Register");
            System.out.println("2. Login");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    registerUser(scanner);
                    break;
                case 2:
                    if (loginUser(scanner)) {
                        System.out.println("Login successful!");
                        exit = true;
                    } 
                    else {
                        System.out.println("Login failed. Please try again.");
    
                    }
                    break;
                case 3:
                    exit = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }

        scanner.close();
    }

    private static void registerUser(Scanner scanner) {
        System.out.print("Enter a new username: ");
        String newUsername = scanner.nextLine();
        System.out.print("Enter a new password: ");
        String newPassword = scanner.nextLine();

        if (registerNewAccount(newUsername, newPassword)) {
            System.out.println("Registration successful!");
        } else {
            System.out.println("Registration failed. Username is already taken.");
        }
    }

    private static boolean loginUser(Scanner scanner) {
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        return checkCredentials(username, password);
    }

    private static boolean registerNewAccount(String newUsername, String newPassword) {
        try {
            String filePath = System.getProperty("user.dir") + "/data.txt";
            // Check if the username is already taken
            if (isUsernameTaken(filePath, newUsername)) {
                return false;
            }

            FileWriter writer = new FileWriter(filePath, true); // Open the file for appending
            writer.write(newUsername + ";" + newPassword + "\n");
            writer.close();
            return true;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }

    private static boolean isUsernameTaken(String filePath, String newUsername) {
        try {
            Scanner scanner = new Scanner(new FileReader(filePath));
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] parts = line.split(";");
                if (parts.length > 0) {
                    String username = parts[0].trim();
                    if (username.equals(newUsername)) {
                        scanner.close();
                        return true; // Username is already taken
                    }
                }
            }
            scanner.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false; // Username is not taken
    }

    private static boolean checkCredentials(String username, String password) {
        String filePath = System.getProperty("user.dir") + "/data.txt";
        try {
            Scanner scanner = new Scanner(new FileReader(filePath));
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                String[] parts = line.split(";");
                if (parts.length == 2) {
                    String storedUsername = parts[0].trim();
                    String storedPassword = parts[1].trim();
                    if (storedUsername.equals(username) && storedPassword.equals(password)) {
                        scanner.close();
                        return true; // Credentials match
                    }
                }
            }
            scanner.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false; // Credentials do not match
    }
}

